[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "tmt-web"
dynamic = ["version"]
description = 'Web app for checking tmt tests, plans and stories'
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
keywords = []
authors = [
  { name = "Petr Splichal", email = "psplicha@redhat.com" },
  { name = "Tomas Koscielniak", email = "tkosciel@redhat.com" }
]
classifiers = [
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.12",
]
dependencies = [
  "tmt~=1.35",
  "fastapi~=0.112",
  "httpx~=0.27",
  "uvicorn~=0.30",
  "celery[redis]~=5.4",
]

[project.urls]
Source = "https://github.com/teemtee/web teemtee/tmt-web"

[tool.hatch.version]
source = "vcs"
raw-options.version_scheme = "release-branch-semver"

[tool.hatch.envs.dev]
extra-dependencies = [
  "mypy~=1.11.1",
  "ruff~=0.5.7",
  "hatch",
]

[tool.hatch.envs.dev.scripts]
check = "mypy --install-types --non-interactive src/tmt_web"

[tool.ruff]
# Based on teemtee/tmt/pyproject.toml
line-length = 100
target-version = "py312"
lint.select = [
    "F",  # pyflakes
    "E",  # pycodestyle error
    "W",  # pycodestyle warning
    "I",  # isort
    "N",  # pep8-naming
    #"D",  # pydocstyle TODO
    "UP",  # pyupgrade
    "YTT",  # flake8-2020
    "ASYNC",  # flake8-async
    "S",  # flake8-bandit
    "B",  # flake8-bugbear
    "A",  # flake8-builtins
    "COM",  # flake8-commas
    "C4",  # flake8-comprehensions
    "DTZ",  # flake8-datetimez
    "T10",  # flake8-debugger
    "EXE",  # flake8-executable
    "ISC",  # flake8-implicit-str-concat
    "ICN",  # flake8-import-conventions
    "LOG",  # flake8-logging
    "G",  # flake8-logging-format
    "PIE",  # flake8-pie
    "PYI",  # flake8-pyi
    "PT",  # flake8-pytest-style
    "Q003",  # avoidable-escaped-quote
    "Q004",  # unnecessary-escaped-quote
    "RSE",  # flake8-raise
    "RET",  # flake8-return
    "SIM",  # flake8-simplify
    "TID",  # flake8-tidy-imports
    "INT",  # flake8-gettext
    "PGH",  # pygrep-hooks
    "PLC",  # pylint-convention
    "PLE",  # pylint-error
    "PLR",  # pylint-refactor
    "RUF",  # ruff
    ]
lint.ignore = [
    #"E501",  # TODO line lenght
    "PLR0913",  # Too many arguments
    "RET505",  # Unnecessary 'else' after 'return'
    "COM812",  # Trailing comma missing
]

[tool.ruff.lint.per-file-ignores]
# Less strict security checks in tests
"tests/*" = [
    "S101",  # Assert usage
    "PLR2004",  # Magic value
    "E501",  # Line length
    ]
"src/tmt_web/generators/html_generator.py" = [
    "W291",  # Trailing whitespace
    "E501",  # Line length
]
